
def str_abbreviation_first_word_rec(st,limit,sep='_',start_pos=0):
    if len(st)>limit:
        sep_first_pos=st.find(sep,start_pos)+1
        print(st[0:start_pos+1],st[sep_first_pos:])
        st=(st[0:start_pos+1]+"_"+st[sep_first_pos:])
        print(st)
        return str_abbreviation_first_word(st,limit,sep,start_pos+2)
    return st

def str_abbreviation_first_word(st,limit,sep='_',start_pos=0):
    while len(st)>limit:
        sep_first_pos=st.find(sep,start_pos)+1
        st=(st[0:start_pos+1]+"_"+st[sep_first_pos:])
        start_pos=start_pos+2
        if start_pos>limit:
            return st[:limit]
    return st

st="z.w.x.activation.group.fundProvider.activationTime"


print("st=",st)
print('first . pos=', st.find('.'))
print('first _ pos=', st.find('_'))
print('after first . pos=', st[st.find('.')+1:])
print('after first _ pos=', st[st.find('_')+1:])
print('after first . pos max len=31=',(st[0]+"_"+st[st.find('.')+1:])[:31])

print('str_abbreviation_first_word=', str_abbreviation_first_word(st,31,'.') )


st="N_________________________________________________________n___n_N_________________________________________________________________________________________________________________n_____n_N_________________________________________________________________________________________________________________n_____n_N_________________________________________________________________________________________________________________________________________________________________________________________________________________________________n_________n_N_________________________________________________________________________________________________________________n_____n_N_________________________________________________________________________________________________________________________________________________________________________________________________________________________________n_________n_N_________________________________________________________________________________________________________________________________________________________________________________________________________________________________n_________n_N_________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________n_________________n_N_________________________________________________________________________________________________________________n_____n_N_________________________________________________________________________________________________________________________________________________________________________________________________________________________________n_______n_N_________________________________________________________________________________________________________________n_____n_N_________________________________________________________________________________________________________________________________________________________________________________________________________________________________n_________n_N_________________________________________________________________________________________________________________n_____n_N_________________________________________________________________________________________________________________________________________________________________________________________________________________________________n_________n_N_________________________________________________________________________________________________________________________________________________________________________________________________________________________________n_________n_N_________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________n_________________n"
print('resolve recursive limit by loop=', str_abbreviation_first_word(st,31,'.') )
